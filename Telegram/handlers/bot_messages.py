from aiogram import Router
from aiogram.types import Message, FSInputFile

from ..keyboards import builders, fabrics, inline, reply
from ..data.subloader import get_json
from Telegram.translate.translateAPI import trans_text


router = Router()


@router.message()
async def echo(message: Message):
    msg = message.text.lower()
    smiles = await get_json('smiles.json')
    cat = FSInputFile("2024-01-11 19.07.16.jpg")

    if msg == '–∞–≤—Ç–æ—Ä–∏':
        await message.answer('–†–æ–∑—Ä–æ–±–Ω–∏–∫–∏ –±–æ—Ç–∞:', reply_markup=inline.linsk_kb)
    if msg == '—Å–ª–∞–≤–∞ —É–∫—Ä–∞—ó–Ω—ñ':
        await message.answer('–ì–µ—Ä–æ—è–º –°–ª–∞–≤–∞! üá∫üá¶')
    elif msg == '—Å–ø–µ—Ü –∫–Ω–æ–ø–∫–∏':
        await message.answer("–í–æ—Ç —Å–ø–µ—Ü –∫–Ω–æ–ø–∫–∏", reply_markup=reply.spec_kb)



    elif msg == '–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä':
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ:', reply_markup=builders.calc_kb())
    elif msg == '—Å–º–∞–π–ª–∏–∫–∏':
        await message.answer(f'{smiles[0][0]} <b>{smiles[0][1]}</b>', reply_markup=fabrics.paginator())# –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ –ø–æ –¥–µ—Ñ–æ–ª—Ç—É —Ç–∞–º —Å—Ç–æ–∏—Ç 0
    elif msg == '–Ω–∞–∑–∞–¥':
        await message.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=reply.main_kb)
    elif msg == '–≤–∞—à–∞ –º–∞–º–∞':
        await message.answer('–í–æ—Ç –≤–∞—à–∞ –º–∞–º–∞')
        await message.answer_photo(cat)
    else:
        pass
        #await message.answer_photo(cat)
